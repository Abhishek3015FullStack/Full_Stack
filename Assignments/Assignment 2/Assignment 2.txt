Display This Information using printf
1. Your Name
2. Your Birth date
3. Your Age
4. Your Address
#include <stdio.h>
int main() {
   
   printf("Abhishek Pankaj Jain \n");
   printf("30/11/1998  \n");
   printf("24 \n");
   printf("bopal road dhule \n");

    return 0;
}

==============================================================
Write a program to make Simple calculator (to make addition, subtraction,
multiplication, division and modulo)

#include <stdio.h>

int main() {
  
    while(1)
    {
    int choice =0;
    printf("1.addition,2.subtraction,3.multiplication,4.division 5. modulo");
    printf("enter your choice");
    scanf("%d",&choice);
    int a , b ;
    printf("enter a first number");
    scanf("%d",&a);
    printf("enter a second number");
    scanf("%d",&b);
    switch(choice)
    {
        case 1: 
               
                int c = a+b;
                printf("%d",c);
                break;
         case 2: 
                
                int d = a-b;
                printf("%d",d);
                break;
         case 3: 

                int e = a*b;
                printf("%d",e);
                break;
        
         case 4: 

                int f = a/b;
                printf("%d",f);
                break;
            
         case 5: 

                int g = a%b;
                printf("%d",g);
                break;
        default :printf("abhishek");
        
    }
   
}
    return 0;
}
===============================================================================================================
WAP to find area of circle, rectangle and triangle
#include <stdio.h>

int main() {
while(1)
{
    int choice = 0;
    printf("1.area of circle  2.area of Rectangle 3.area of triangle");
    printf("enter your choice");
    scanf("%d",&choice);
    switch(choice)
    {
        case 1:
                int radius ;
                printf("enter the radius");
                scanf("%d",&radius);
                int d = 3.14*radius* radius;
                printf("%d",&d);
                break;
               
                
        case 2:
                int length, width ;
                printf("enter the length");
                scanf("%d",&length);
                printf("enter the width");
                scanf("%d",&width);
                int e = length * width;
                printf("%d",&e);
                break;
                
                
                
                
                
                
        case 3:
                 int base , height;
                printf("enter a base ");
                scanf("%d",&base);
                printf("enter a height ");
                scanf("%d",&height);
                int c = 1.5*base* height;
                printf("%d",c);
                break;

        
    }
}

    return 0;
}
======================================================================================================================
WAP to find simple interest 
#include <stdio.h>

int main() 
{
    int p,r ,t;
    printf("enter the p");
    scanf("%d",&p);
    printf("enter the r");
    scanf("%d",&r);
    printf("enter the t");
    scanf("%d",&t);
    
    int c = (p*t*r)/100;
    printf("simple interesdt is %d",c);
     
                
       
    return 0;
}
=========================================================================================================================
WAP to check if the given year is a leap year or not.
#include <stdio.h>

int main() {
  int year =0; 
  printf("enter a year  ");
  scanf("%d",&year);
  if(year >0)
  {
    int result = year%4;
 
     if(result == 0)
    {
        printf("this is a leap year");

    }
    else
    {
         printf("this is a not leap year");
    }
  }
  else
  {
        printf("this is a not valid year");
  }
    return 0;
}
========================================================================================================================
WAP to convert years into days and days into years
#include <stdio.h>

int main() {
    int choice = 0;
    int days = 0;
    int result= 0;
    int result1= 0;
    int year =0 ;
  while(1)
  {
      
      printf("1.days to year 2.year to days ");
      printf("enter your choice");
      scanf("%d",&choice);
      switch(choice)
      {
          case 1: 
                 printf("enter a days count");
                 scanf("%d",& days);
                 result = days/365;
                 printf("%d\n",result);
                 break;
        case 2:
                printf("enter a year count");
                scanf("%d",& year);
                result1 = year*365;
                printf("%d\n",result1);
                break;
      }
  }
    return 0;
}

=========================================================================================================================
3.2 WAP to make simple calculator (operation include Addition, Subtraction,
Multiplication, Division, modulo)

#include <stdio.h>

int main() {
  
    while(1)
    {
    int choice =0;
    printf("1.addition,2.subtraction,3.multiplication,4.division 5. modulo");
    printf("enter your choice");
    scanf("%d",&choice);
    int a , b ;
    printf("enter a first number");
    scanf("%d",&a);
    printf("enter a second number");
    scanf("%d",&b);
    switch(choice)
    {
        case 1: 
               
                int c = a+b;
                printf("%d",c);
                break;
         case 2: 
                
                int d = a-b;
                printf("%d",d);
                break;
         case 3: 

                int e = a*b;
                printf("%d",e);
                break;
        
         case 4: 

                int f = a/b;
                printf("%d",f);
                break;
            
         case 5: 

                int g = a%b;
                printf("%d",g);
                break;
        default :printf("abhishek");
        
    }
   
}
    return 0;
}
==========================================================================================================================
WAP to swap two numbers without using third variable 
#include <stdio.h>

int main() {
    int a=20, b =30;
     a= a+b;
     b= a-b;
     a= a-b;
     
    
    printf("%d",a);
    printf("%d",b);
    

    return 0;
}
==========================================================================================================================
WAP to find number is even or odd using ternary operator 
#include <stdio.h>

int main() {
    int a ;
    printf("enter a number");
    scanf("%d",&a);
    (a%2==0?printf("even"):printf("odd"));
    

    return 0;
}
========================================================================================================================
1. Monday to Sunday using switch case 
 int main() {
   while(1)
   {
       int choice;
       printf("1.weekdays number \n ");
       printf("enter your choice \n");
       scanf("%d",&choice);
       switch(choice)
       {
           case 1: 
                 printf("monday \n");
                 break;
           case 2:
                printf("tuesday \n");
                break;
           case 3:
                printf("wednesday \n");
                break;
           case 4:
                printf("thrusday \n");
                break;
           case 5:
                printf("friday \n");
                break;
            case 6:
                 printf("saturday \n");
                 break;
            case 7:
                  printf("Sunday \n");
                  break;
                  
             default :
                    printf("wrong input \n");
                        
           
           
       }
       
   }
   
   
   

    return 0;
}
==========================================================================================================================
Vowel or Consonant using switch case 

#include <stdio.h>


    // Write C code here
  int main() {
       char c = 'a' ;
       while(1){      
       
      
       printf("enter your character \n");
       scanf("%c",&c);
       switch(c)
       {
           case 'A': 
                 printf("vowels \n");
                 break;
           case 'E':
                printf("vowels \n");
                break;
           case 'I':
                printf("vowels \n");
                break;
           case 'O':
                printf("vowels \n");
                break;
           case 'U':
                printf("vowels \n");
                break;
          case 'a': 
                 printf("vowels \n");
                 break;
           case 'e':
                printf("vowels \n");
                break;
           case 'i':
                printf("vowels \n");
                break;
           case 'o':
                printf("vowels \n");
                break;
           case 'u':
                printf("vowels \n");
                break;
                
         default: 
                printf("consonant \n");
               
                        
           
           
       }
       
   
   
   
   
    }
    return 0;
}
===========================================================================================================================
WAP to print 972 to 897 using for loop
#include <stdio.h>

int main() {
   int a ;
   for(int  i= 972 ;i>= 897;i--)
   {
       printf("%d\n",i);
   }

    return 0;
}
=========================================================================================================================
WAP to take 10 no. Input from user and find out
#include<stdio.h>
int main()
{
    int a[10] ,search=0;
    for(int i =0 ;i<10;i++)
    {
        printf("enter a nuber");
        scanf("%d",&a[i]);
    }
    for(int i =0 ;i<10;i++)
    {
        //printf("enter a nuber");
        printf("%d",a[i]);
    }
    printf("enter a number you waant to search");
    scanf("%d",&search);
    for(int i = 0;i<10;i++)
    {
        if(a[i]== search)
        {
            printf("number is in the array ");
        }
        else
        {
            printf("number not is in the array ");
        }
    }
	return 0;    
}
==========================================================================================================================
How many Even numbers are there 


How many Even numbers are there
#include<stdio.h>
 int main() 
	{
     		int j = 0;     
		for(int i = 0;i<100;i++)     
		{         
			if(i%2==0)
			{
             			j++;          

			}
			     
		}
		printf("%d",j);
		return 0; 
}
==========================================================================================================================
How many odd numbers are there 
#include<stdio.h> 
int main()
{
     int j = 0;
     for(int i = 0;i<100;i++)
     
	{
         	if(i%2!=0)
         
		{
             		j++;          
		}
     
	}
     printf("%d",j); 
}
==========================================================================================================================
. Sum of even numbers 
Sum of even numbers
#include<stdio.h>
int main()
{
    int j = 0;
    int result   = 0;
    for(int i = 0;i<100;i++)
    {
        if(i%2==0)
        {
            
            j++;
            result +=i;

        }
    }
    printf("%d",result);
}
==========================================================================================================================

Sum of odd numbers
#include<stdio.h>
int main()
{
    int j = 0;
    int result   = 0;
    for(int i = 0;i<100;i++)
    {
        if(i%2==0)
        {
            
            j++;
            result +=i;

        }
    }
    printf("%d",result);
}


===========================================================================================================================
WAP to print factorial of given number
 WAP to print factorial of given number
#include<stdio.h>  
int main()    
{    
 	int i,fact=1,number;    
 	printf("Enter a number: ");    
  	scanf("%d",&number);    
    	for(i=1;i<=number;i++){    
      		fact=fact*i;    
  }    
 printf("Factorial of %d is: %d",number,fact);    
return 0;  
}
==========================================================================================================================
WAP to print Fibonacci series up to given numbers
WAP to print Fibonacci series up to given numbers
#include<stdio.h>    
int main()    
{    
 int n1=0,n2=1,n3,i,number;    
 printf("Enter the number of elements:");    
 scanf("%d",&number);    
 printf("\n%d %d",n1,n2);
 for(i=2;i<number;++i)    
 {    
  n3=n1+n2;    
  printf(" %d",n3);    
  n1=n2;    
  n2=n3;    
 }  
  return 0;  
 } 
===========================================================================================================================
WAP to print number in reverse order e.g.: number = 64728 ---> reverse =
82746 
#include <stdio.h>

int main() {

  int n, reverse = 0, remainder;

  printf("Enter an integer: ");
  scanf("%d", &n);

  while (n != 0) {
    remainder = n % 10;
    reverse = reverse * 10 + remainder;
    n  = n/ 10;
  }

  printf("Reversed number = %d", reverse);

  return 0;
}
===========================================================================================================================
Write a program to find out the max from given number (E.g., No: -1562
Max number is 6)

#include <stdio.h>
#include <stdlib.h>

int findMaxDigit(int number) {
    
    int absNumber = number;

    
    int maxDigit = absNumber % 10;

    
    while (absNumber > 0) {
        int digit = absNumber % 10;
        if (digit > maxDigit) {
            maxDigit = digit;
        }
        absNumber /= 10;
    }

    return maxDigit;
}

int main() {
    int number = 0;
    printf("enter a value");
    scanf("%d",&number);
    int maxDigit = findMaxDigit(number);

    printf("Number: %d\n", number);
    printf("Max number is: %d\n", maxDigit);

    return 0;
}


===========================================================================================================================
Write a program make a summation of given number (E.g., 1523 Ans: -11)

#include <stdio.h>
#include <stdlib.h>

int digitSum(int number) {
    
    int absNumber = number;

    
    int sum = 0;

        while (absNumber > 0) {
        int digit = absNumber % 10;
        sum += digit;
        absNumber /= 10;
    }

        return (number < 0) ? -sum : sum;
}

int main() {
    int number = 0;
    printf("enter a value ");
    scanf("%d",&number);
    int sum = digitSum(number);

    printf("Number: %d\n", number);
    printf("Sum of digits is: %d\n", sum);

    return 0;
}

==========================================================================================================================
Write a program you have to make a summation of first and last Digit. (E.g.,
1234 Ans: -5) 
#include <stdio.h>
#include <stdlib.h>

int sumFirstAndLastDigit(int number) {
    
    int absNumber = number;

        int firstDigit = absNumber;
    while (firstDigit >= 10) {
        firstDigit /= 10;
    }

    
    int lastDigit = absNumber % 10;

    
    return (number < 0) ? -(firstDigit + lastDigit) : (firstDigit + lastDigit);
}

int main() {
    int number = 0;
    printf("enter a value");
    scanf("%d",&number);
    int sum = sumFirstAndLastDigit(number);

    printf("Number: %d\n", number);
    printf("Sum of first and last digits is: %d\n", sum);

    return 0;
}
==========================================================================================================================
Pattern 1
#include<stdio.h>
int main()
{
    int i,j,k,n;
    
   
    printf("Enter how many rows you want : ");
    scanf("%d", &n);
 
       for(i=1; i<=n; i++)
        {
        
            k=0;      
        for(j=1; j<=i; j++)
        {
            k = !k;
            printf(" %d", k);
        }
        printf("\n");
    }
    return 0;
}
============================================
Pattern 2
#include<stdio.h>
int main()
{
    int n=5 ;
    int i,j;
    char ch ='A';
    for(i =0;i<=n;i++)
    {
        for(j=1;j<=i;j++)
        {
            printf("%c",ch);
            if(ch<'Z')
            ch++;
            else
            ch ='A';
        }
        printf("\n");
    }
	return 0;
}

============================================================
pattern 3
#include <stdio.h>

int main() {
    // Write C code here
   int min_stars =1;
   int p_height = 5;
   int p_space = p_height-1;
   int  i,j,k;
   for(i= 0;i<p_height;i++)
   {
      for(k=p_height-1;k>=i;k--)
      {
          printf(" ");
      }
      for(j=1;j<=i;j++)
      {
          printf(" * ");
      }
      printf("\n ");
   }

    return 0;
}
=================================================
Pattern 4

#include <stdio.h>

int main() {
    // Write C code here
   int x= 0, y=0;
   int columns = 0;
   int col = 0;
   
   printf("\n enter a number of te columns");
   scanf("%d",&columns);
   for(x= 0;x<(columns*2);++x)
   {
       for(y=0;y<col;++y)
       {
           printf("*");
           
       }
       (x<columns)?(++col):(--col);
       
       printf("\n");
   }
    return 0;
}
==============
pattern 5
#include <stdio.h>

int main() {
    // Write C code here
  int i, j;
  int n=1;
  for(i=1;i<=5;i++)
  {
      for(j=1;j<=i;j++)
      {
          printf("%d  ",n);
          n++;
      }
      printf("\n");
  }
  
   
    return 0;
}
   

=============================
pattern 6

#include <stdio.h>

int main() {
  
  char i,j;
  for(i='A';i<='E';i++)
  {
      for(j='A';j<=i;j++)
      {
          printf("%c ",j);
      }
      printf("\n");
  }
   
    return 0;
}
==========================================================================================================================
Write a program to find out the max number from given array using function
#include <stdio.h>

int find_max(int arr[], int size) {
    if (size <= 0) {
        printf("Error: Input array is empty.\n");
        return -1; // Returning a negative value to indicate an error.
    }

    int max_num = arr[0]; // Initialize the maximum number as the first element of the array.

    for (int i = 1; i < size; i++) {
        if (arr[i] > max_num) {
            max_num = arr[i];
        }
    }

    return max_num;
}

int main() {
    // Replace the sample_array with your own array of numbers.
    int sample_array[] = {5, 8, 2, 11, 4, 9, 6};
    int array_size = sizeof(sample_array) / sizeof(sample_array[0]);

    int result = find_max(sample_array, array_size);

    if (result != -1) {
        printf("The maximum number in the array is: %d\n", result);
    }

    return 0;
}
=========================================================================================================================

WAP of Addition, Subtraction, Multiplication and Division using Switch
case.(Must Be Menu Driven)

#include <stdio.h>

// Function to perform addition
float addition(float a, float b) {
    return a + b;
}

// Function to perform subtraction
float subtraction(float a, float b) {
    return a - b;
}

// Function to perform multiplication
float multiplication(float a, float b) {
    return a * b;
}

// Function to perform division
float division(float a, float b) {
    if (b == 0) {
        printf("Error: Division by zero is not allowed.\n");
        return 0;
    }
    return a / b;
}

int main() {
    int choice;
    float num1, num2, result;

    do {
        printf("Menu:\n");
        printf("1. Addition\n");
        printf("2. Subtraction\n");
        printf("3. Multiplication\n");
        printf("4. Division\n");
        printf("5. Exit\n");
        printf("Enter your choice (1-5): ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter two numbers: ");
                scanf("%f %f", &num1, &num2);
                result = addition(num1, num2);
                printf("Result: %.2f\n", result);
                break;

            case 2:
                printf("Enter two numbers: ");
                scanf("%f %f", &num1, &num2);
                result = subtraction(num1, num2);
                printf("Result: %.2f\n", result);
                break;

            case 3:
                printf("Enter two numbers: ");
                scanf("%f %f", &num1, &num2);
                result = multiplication(num1, num2);
                printf("Result: %.2f\n", result);
                break;

            case 4:
                printf("Enter two numbers: ");
                scanf("%f %f", &num1, &num2);
                result = division(num1, num2);
                printf("Result: %.2f\n", result);
                break;

            case 5:
                printf("Exiting the program. Goodbye!\n");
                break;

            default:
                printf("Invalid choice. Please select a valid option.\n");
        }
    } while (choice != 5);

    return 0;
}
=============================================================================================================================
WAP of Addition, Subtraction, Multiplication and Division using Switch
case.(Must Be Menu Driven) 

WAP of Addition, Subtraction, Multiplication and Division using Switch
case.(Must Be Menu Driven)

#include <stdio.h>

// Function to perform addition
float addition(float a, float b) {
    return a + b;
}

// Function to perform subtraction
float subtraction(float a, float b) {
    return a - b;
}

// Function to perform multiplication
float multiplication(float a, float b) {
    return a * b;
}

// Function to perform division
float division(float a, float b) {
    if (b == 0) {
        printf("Error: Division by zero is not allowed.\n");
        return 0;
    }
    return a / b;
}

int main() {
    int choice;
    float num1, num2, result;

    do {
        printf("Menu:\n");
        printf("1. Addition\n");
        printf("2. Subtraction\n");
        printf("3. Multiplication\n");
        printf("4. Division\n");
        printf("5. Exit\n");
        printf("Enter your choice (1-5): ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter two numbers: ");
                scanf("%f %f", &num1, &num2);
                result = addition(num1, num2);
                printf("Result: %.2f\n", result);
                break;

            case 2:
                printf("Enter two numbers: ");
                scanf("%f %f", &num1, &num2);
                result = subtraction(num1, num2);
                printf("Result: %.2f\n", result);
                break;

            case 3:
                printf("Enter two numbers: ");
                scanf("%f %f", &num1, &num2);
                result = multiplication(num1, num2);
                printf("Result: %.2f\n", result);
                break;

            case 4:
                printf("Enter two numbers: ");
                scanf("%f %f", &num1, &num2);
                result = division(num1, num2);
                printf("Result: %.2f\n", result);
                break;

            case 5:
                printf("Exiting the program. Goodbye!\n");
                break;

            default:
                printf("Invalid choice. Please select a valid option.\n");
        }
    } while (choice != 5);

    return 0;
}
========================================================================================================================

WAP to find reverse of string using recursion
# include <stdio.h>

void reverse(char *str)
{
  if (*str)
  {
    reverse(str + 1);
    printf("%c", *str);
  }
}
 

int main()
{
  char a[] = "Abhishek";
  reverse(a);
  return 0;
}
====================================================================================================================
factorial
#include <stdio.h>

// Function to find the factorial of a number using recursion
unsigned long long int factorial(int n) {
    if (n == 0 || n == 1) {
        return 1; // Base case: factorial of 0 and 1 is 1
    } else {
        return n * factorial(n - 1); // Recursive call to find factorial of (n-1)
    }
}

int main() {
    int num;
    printf("Enter a non-negative integer: ");
    scanf("%d", &num);

    if (num < 0) {
        printf("Error: Factorial is not defined for negative numbers.\n");
    } else {
        unsigned long long int result = factorial(num);
        printf("Factorial of %d is %llu.\n", num, result);
    }

    return 0;
}
=====================================================================================================================
WAP to take two Array input from user and sort them in ascending or
descending order as per user’s choice
sorting and asc and desc 
#include <stdio.h>

// Function to swap two integers
void swap(int a, int b) {
    int temp = *a;
    a = b;
    *b = temp;
}

// Function to perform bubble sort in ascending order
void bubbleSortAscending(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}

// Function to perform bubble sort in descending order
void bubbleSortDescending(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] < arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}

// Function to display the array
void displayArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int size;
    printf("Enter the size of the arrays: ");
    scanf("%d", &size);

    int arr1[size], arr2[size];

    printf("Enter elements of Array 1: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr1[i]);
    }

    printf("Enter elements of Array 2: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr2[i]);
    }

    int choice;
    printf("Enter your choice:\n");
    printf("1. Sort both arrays in ascending order.\n");
    printf("2. Sort both arrays in descending order.\n");
    scanf("%d", &choice);

    switch (choice) {
        case 1:
            bubbleSortAscending(arr1, size);
            bubbleSortAscending(arr2, size);
            printf("Sorted Array 1 (ascending): ");
            displayArray(arr1, size);
            printf("Sorted Array 2 (ascending): ");
            displayArray(arr2, size);
            break;
        case 2:
            bubbleSortDescending(arr1, size);
            bubbleSortDescending(arr2, size);
            printf("Sorted Array 1 (descending): ");
            displayArray(arr1, size);
            printf("Sorted Array 2 (descending): ");
            displayArray(arr2, size);
            break;
        default:
            printf("Invalid choice. Please enter 1 or 2.\n");
            break;
    }

    return 0;
}
===========================================================================================================================
WAP to make addition, Subtraction and multiplication of two matrix using
2-D Array

#include <stdio.h>

#define MAX_ROWS 100
#define MAX_COLS 100

// Function to read a matrix from the user
void readMatrix(int mat[MAX_ROWS][MAX_COLS], int rows, int cols) {
    printf("Enter the elements of the matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &mat[i][j]);
        }
    }
}

// Function to display a matrix
void displayMatrix(int mat[MAX_ROWS][MAX_COLS], int rows, int cols) {
    printf("Matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("%d\t", mat[i][j]);
        }
        printf("\n");
    }
}

// Function to perform matrix addition
void matrixAddition(int mat1[MAX_ROWS][MAX_COLS], int mat2[MAX_ROWS][MAX_COLS], int result[MAX_ROWS][MAX_COLS], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = mat1[i][j] + mat2[i][j];
        }
    }
}

// Function to perform matrix subtraction
void matrixSubtraction(int mat1[MAX_ROWS][MAX_COLS], int mat2[MAX_ROWS][MAX_COLS], int result[MAX_ROWS][MAX_COLS], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = mat1[i][j] - mat2[i][j];
        }
    }
}

// Function to perform matrix multiplication
void matrixMultiplication(int mat1[MAX_ROWS][MAX_COLS], int mat2[MAX_ROWS][MAX_COLS], int result[MAX_ROWS][MAX_COLS], int rows1, int cols1, int rows2, int cols2) {
    if (cols1 != rows2) {
        printf("Error: Matrix multiplication is not possible. Number of columns in the first matrix should be equal to the number of rows in the second matrix.\n");
        return;
    }

    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols2; j++) {
            result[i][j] = 0;
            for (int k = 0; k < cols1; k++) {
                result[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}

int main() {
    int rows1, cols1, rows2, cols2;

    printf("Enter the number of rows and columns for the first matrix: ");
    scanf("%d %d", &rows1, &cols1);

    printf("Enter the number of rows and columns for the second matrix: ");
    scanf("%d %d", &rows2, &cols2);

    if (rows1 <= 0 || cols1 <= 0 || rows2 <= 0 || cols2 <= 0 || cols1 != rows2) {
        printf("Error: Invalid matrix dimensions.\n");
        return 1;
    }

    int matrix1[MAX_ROWS][MAX_COLS];
    int matrix2[MAX_ROWS][MAX_COLS];
    int result[MAX_ROWS][MAX_COLS];

    printf("Enter the first matrix:\n");
    readMatrix(matrix1, rows1, cols1);

    printf("Enter the second matrix:\n");
    readMatrix(matrix2, rows2, cols2);

    // Matrix Addition
    matrixAddition(matrix1, matrix2, result, rows1, cols1);
    printf("Addition of matrices:\n");
    displayMatrix(result, rows1, cols1);

    // Matrix Subtraction
    matrixSubtraction(matrix1, matrix2, result, rows1, cols1);
    printf("Subtraction of matrices:\n");
    displayMatrix(result, rows1, cols1);

    // Matrix Multiplication
    matrixMultiplication(matrix1, matrix2, result, rows1, cols1, rows2, cols2);
    printf("Multiplication of matrices:\n");
    displayMatrix(result, rows1, cols2);

    return 0;
}
========================================================================================================================
WAP Find out length of string without using inbuilt function
#include <stdio.h>

// Function to calculate the length of a string
int stringLength(const char* str) {
    int length = 0;

    // Iterate through each character until the null terminator is encountered
    while (str[length] != '\0') {
        length++;
    }

    return length;
}

int main() {
    char inputString[100];

    printf("Enter a string: ");
    scanf("%s", inputString);

    int length = stringLength(inputString);
    printf("Length of the string: %d\n", length);

    return 0;
}
==========================================================================================================================
WAP to reverse a string and check that the string is palindrome or not
#include <stdio.h>
#include <string.h>
  
int main() {
   char inputArray[100], reversedArray[100];
 
   printf("Enter the string\n");
   scanf("%s", inputArray);
    
   /* Copy input string and reverse it*/
   strcpy(reversedArray, inputArray);
    
   / reverse string /
   strrev(reversedArray);
    
   / Compare reversed string with inpit string /
   if(strcmp(inputArray, reversedArray) == 0 )
      printf("%s is a palindrome.\n", inputArray);
   else
      printf("%s is not a palindrome.\n", inputArray);
       
   return 0;
}
=============================================================================================================================
Write a program of structure employee that provides the following
information -print and display empno, empname, address and age 

#include <stdio.h>
#include <string.h> // Include the header for the strcpy function

struct demo {
    int emp_no;
    char empname[20];
    char address[100];
    int age;
} s1 ,s2,s3,s4,s5;

int main() {
    
    
    s1.emp_no = 10;
    strcpy(s1.empname, "abhishek");
    strcpy(s1.address, "bopal");
    s1.age = 10;

    printf("Employee Number: %d\n", s1.emp_no);
    printf("Employee Name: %s\n", s1.empname);
    printf("Address: %s\n", s1.address);
    printf("Age: %d\n", s1.age); // Use %d to print an integer

    return 0;
}
=========================================================================================================================
Write a program of structure for five employee that provides the following
information -print and display empno, empname, address and age 
#include <stdio.h>
#include <string.h>

// Structure to represent an employee
struct Employee {
    int emp_no;
    char empname[50];
    char address[100];
    int age;
};

int main() {
    // Create an array of five employees
    struct Employee employees[5];

    // Input information for each employee
    for (int i = 0; i < 5; i++) {
        printf("Enter details for Employee %d:\n", i + 1);

        printf("Employee Number: ");
        scanf("%d", &employees[i].emp_no);

        printf("Employee Name: ");
        scanf("%s", employees[i].empname);

        printf("Address: ");
        scanf("%s", employees[i].address);

        printf("Age: ");
        scanf("%d", &employees[i].age);

        printf("\n");
    }

    // Display information for each employee
    printf("Employee Information:\n");
    for (int i = 0; i < 5; i++) {
        printf("Employee %d:\n", i + 1);
        printf("Employee Number: %d\n", employees[i].emp_no);
        printf("Employee Name: %s\n", employees[i].empname);
        printf("Address: %s\n", employees[i].address);
        printf("Age: %d\n", employees[i].age);
        printf("\n");
    }

    return 0;
}
==========================================================================================================================
WAP to show difference between Structure and Union
In the case of a Structure, there is a specific memory location for every input data member. Thus, it can store multiple values of the various members. In the case of a Union, there is an allocation of only one shared memory for all the input data members. Thus, it stores one value at a time for all of its members.












